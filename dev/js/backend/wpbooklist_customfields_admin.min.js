/**
 * JavaScript Admin Functions - wpbooklist-customfields-admin.min.js
 *
 * @author   Jake Evans
 * @category JavaScript
 * @package  Includes/Assets/Js
 * @version  6.0.0
 */

console.log( 'This is the JavaScript Object that holds all PHP Variables for use in JavaScript' );
console.log( wpbooklistCustomFieldsPhpVariables );


// All functions wrapped in jQuery( document ).ready()...
jQuery( document ).ready( function( $ ) {
	'use strict';

	/* BEGINNING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function that reveals the rest of the UI based on which Field type the user chooses from the drop-down.
	wpbooklistCustomFieldsTypeChange();

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	wpbooklistCustomFieldsAdminPointersJavascript();

	// Function that enables the 'Create Custom Field' button if the Name input is populated and a type has been selected.
	wpbooklistCustomFieldsNameChange();

	// Function that adds another row in for the drop-down custom field type.
	wpbooklistCustomFieldsAddDropdownOption();

	// Function that removes a row for the drop-down custom field type.
	wpbooklistCustomFieldsRemoveDropdownOption();

	// Function that saves the custom field.
	wpbooklistCustomFieldSave();

	// Function that deletes an entire Custom Field Entry.
	wpbooklistCustomFieldsDeleteEntry();

	// Function that edits the Custom Field Entries.
	wpbooklistCustomFieldsEditEntries();


	/* ENDING SECTION TO CALL ALL FUNCTIONS IN FILE... */

	// Function to display the admin pointer message when entering the Question Mark image with mouse...
	function wpbooklistCustomFieldsAdminPointersJavascript() {

		$( 'body' ).on( 'mouseenter', '.wpbooklist-icon-image-question', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-isbn10':
				pointer = $( this ).pointer({
					content: '<h3>' + wpbooklistPhpVariables.trans135 + '</h3><p class="wpbooklist-admin-pointer">' + wpbooklistPhpVariables.trans173 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter.
			pointer.pointer( 'open' );

			// Close the pointer on mouseleave.
			$( 'body' ).on( 'mouseleave', '.wpbooklist-icon-image-question', function() {
				pointer.pointer( 'close' );
			});

		});

		$( 'body' ).on( 'mouseenter', '.wpbooklist-icon-image-question-with-link', function() {

			var label = $( this ).attr( 'data-label' );
			var pointer;

			// Switch for which admin message to display
			switch ( label ) {
			case 'book-form-libraries':
				pointer = $( this ).pointer({
					content: '<h3>' + wpbooklistPhpVariables.trans203 + '</h3><p class="wpbooklist-admin-pointer">' + wpbooklistPhpVariables.trans204 + wpbooklistPhpVariables.SETTINGS_PAGE_URL + wpbooklistPhpVariables.trans205 + '.</p>',
					position: {
						edge: 'right',
						align: 'right'
					}
				});
				break;
			default:
			}

			// Open the pointer on mouseenter
			pointer.pointer( 'open' );
		});
	}

	// Function that reveals the rest of the UI based on which Field type the user chooses from the drop-down.
	function wpbooklistCustomFieldsTypeChange() {

		$( document ).on( 'change', '#wpbooklist-customfield-input-fieldtype', function( event ) {
			var selection = $( this ).val();
			var html = '';
			var name = $( '#wpbooklist-customfield-input-fieldname' ).val();
			$( '#wpbooklist-customfields-dynamic-html-div' ).html('');

			// Switch for which admin message to display.
			if ( selection === wpbooklistCustomFieldsPhpVariables.trans8 ) {

				html = '<div class="wpbooklist-customfields-create-input-div-dynamic"><img class="wpbooklist-icon-image-question" data-label="customfields-form-fieldname" src="' + wpbooklistCustomFieldsPhpVariables.ROOT_IMG_ICONS_URL + 'question-black.svg"><label class="wpbooklist-question-icon-label" style="margin-left: 3px;">' + wpbooklistCustomFieldsPhpVariables.trans13 + '</label><div id="wpbooklist-customfields-create-drop-down-div"><input class="wpbooklist-customfield-input wpbooklist-customfield-input-dropdown-option" id="wpbooklist-customfield-input-fieldname-dropdown-option" type="text" placeholder="' + wpbooklistCustomFieldsPhpVariables.trans14 + '"/><div class="wpbooklist-addition-div-customfields"><p class="wpbooklist-addition-div-p">' + wpbooklistCustomFieldsPhpVariables.trans15 + '<br/>' + wpbooklistCustomFieldsPhpVariables.trans16 + '</p><img class="wpbooklist-addition-div-img" src="' + wpbooklistCustomFieldsPhpVariables.ROOT_IMG_ICONS_URL + 'addrow.svg"></div></div></div>';

				$( '#wpbooklist-customfields-dynamic-html-div' ).append( html );
				$( '#wpbooklist-customfields-dynamic-html-div' ).animate({
					'opacity': 1,
					'height': '50px'
				}, {
					queue: false,
					duration: 500,
					complete: function() {

						$( '#wpbooklist-customfields-dynamic-html-div' ).css({'height':'auto'});

						if ( '' !== name && undefined !== name && null !== name ) {
							$( '#wpbooklist-admin-customfields-create-button' ).removeAttr( 'disabled' );
						}
					}
				});
			} else {
				if ( '' !== name && undefined !== name && null !== name ) {
					$( '#wpbooklist-admin-customfields-create-button' ).removeAttr( 'disabled' );
				}
			}
		});
	}

	// Function that enables the 'Create Custom Field' button if the Name input is populated and a type has been selected.
	function wpbooklistCustomFieldsNameChange() {

		$( document ).on( 'keydown', '#wpbooklist-customfield-input-fieldname', function( event ) {
			if ( '' !== $( this ).val() && undefined !== $( this ).val() && null !== $( this ).val() ) {
				if ( null !== $( '#wpbooklist-customfield-input-fieldtype' ).val() ) {
					$( '#wpbooklist-admin-customfields-create-button' ).removeAttr( 'disabled' );
				}
			}
		});
	}

	// Function that adds another row in for the drop-down custom field type.
	function wpbooklistCustomFieldsAddDropdownOption() {
		$( document ).on( 'click', '.wpbooklist-addition-div-customfields', function( event ) {
			
			var html = '<div class="wpbooklist-customfields-create-input-div-dynamic"><img class="wpbooklist-icon-image-question" data-label="customfields-form-dropdown-option" src="' + wpbooklistCustomFieldsPhpVariables.ROOT_IMG_ICONS_URL + 'question-black.svg"><label class="wpbooklist-question-icon-label" style="margin-left: 3px;">' + wpbooklistCustomFieldsPhpVariables.trans13 + '</label><div id="wpbooklist-customfields-create-drop-down-div"><input class="wpbooklist-customfield-input wpbooklist-customfield-input-dropdown-option" id="wpbooklist-customfield-input-fieldname-dropdown-option" type="text" placeholder="' + wpbooklistCustomFieldsPhpVariables.trans14 + '"/><div class="wpbooklist-addition-div-customfields-cancel"><img class="wpbooklist-addition-div-img-cancel" src="' + wpbooklistCustomFieldsPhpVariables.ROOT_IMG_ICONS_URL + 'cancel.svg"></div></div></div>';

			$( '#wpbooklist-customfields-dynamic-html-div' ).append( html );
		});
	}

	// Function that removes a row for the drop-down custom field type.
	function wpbooklistCustomFieldsRemoveDropdownOption() {
		$( document ).on( 'click', '.wpbooklist-addition-div-customfields-cancel', function( event ) {
			$( this ).parent().parent().remove();
		});
	}

	// Function that saves the custom field.
	function wpbooklistCustomFieldSave() {

		$( document ).on( 'click', '#wpbooklist-admin-customfields-create-button', function( event ) {

			// Show spinner.
			$( '#wpbooklist-spinner-1').animate({ 'opacity': '1' });

			var data = [];
			var name = $( '#wpbooklist-customfield-input-fieldname' ).val();
			var type = $( '#wpbooklist-customfield-input-fieldtype' ).val();
			var dropDownOptions = '';
			var indivDropOpt = '';
			var request = '';
			var successDiv = $( '#wpbooklist-admin-customfields-response-actual-container' );
			var addFieldSuccess1 = '';
			var endMessage = '';

			successDiv.html( '' );

			if ( 0 < $( '.wpbooklist-customfield-input-dropdown-option' ).length ) {

				$( '.wpbooklist-customfield-input-dropdown-option' ).each(function(){

					// Try and remove all special characters.
					indivDropOpt = $( this ).val().replace(/;/g, '');
					indivDropOpt = $( this ).val().replace(/!/g, '');
					indivDropOpt = $( this ).val().replace(/@/g, '');
					indivDropOpt = $( this ).val().replace(/#/g, '');
					indivDropOpt = $( this ).val().replace(/$/g, '');
					indivDropOpt = $( this ).val().replace(/%/g, '');
					indivDropOpt = $( this ).val().replace(/^/g, '');
					indivDropOpt = $( this ).val().replace(/&/g, '');
					indivDropOpt = $( this ).val().replace(/>/g, '');
					indivDropOpt = $( this ).val().replace(/</g, '');
					indivDropOpt = $( this ).val().replace(/\?/g, '');
					indivDropOpt = $( this ).val().replace(/]/g, '');
					indivDropOpt = $( this ).val().replace(/=/g, '');
					indivDropOpt = $( this ).val().replace(/\+/g, '');
					indivDropOpt = $( this ).val().replace(/`/g, '');
					indivDropOpt = $( this ).val().replace(/~/g, '');
					indivDropOpt = $( this ).val().replace(/,/g, '');
					indivDropOpt = $( this ).val().replace(/./g, '');
					indivDropOpt = $( this ).val().replace(/'/g, '');
					indivDropOpt = $( this ).val().replace(/"/g, '');
					indivDropOpt = $( this ).val().replace(/:/g, '');
					indivDropOpt = $( this ).val().replace(/}/g, '');
					indivDropOpt = $( this ).val().replace(/\[/g, '');
					indivDropOpt = $( this ).val().replace(/\{/g, '');
					indivDropOpt = $( this ).val().replace(/\|/g, '');
					indivDropOpt = $( this ).val().replace(/\(/g, '');
					indivDropOpt = $( this ).val().replace(/\)/g, '');
					
					dropDownOptions = dropDownOptions + '/' + indivDropOpt;

				});
			}

			dropDownOptions = dropDownOptions.substring( 1 );

			data = {
				'action': 'wpbooklist_customfields_save_custom_field_action',
				'security': wpbooklistCustomFieldsPhpVariables.adminnonce1,
				'name': name,
				'type': type,
				'dropdownoptions': dropDownOptions
			};

			request = $.ajax({
				url: ajaxurl,
				type: 'POST',
				data: data,
				timeout: 0,
				success: function( response ) {

					// Hide spinner.
					$( '#wpbooklist-spinner-1').animate({ 'opacity': '0' });

					response = response.split('--sep--');

					if ( '0' === response[0] ) {

						addFieldSuccess1 = '<p class="wpbooklist-tab-intro-para"><img id="wpbooklist-smile-icon-1" src="' + wpbooklistCustomFieldsPhpVariables.ROOT_IMG_ICONS_URL + 'shocked.svg">' + wpbooklistCustomFieldsPhpVariables.trans23 + ' <a href="mailto: techsupport@wpbooklist.com">' + wpbooklistCustomFieldsPhpVariables.trans24 + '</a><br/><br/>' + response[1] + '</p>';

					} else if ( 'nametaken' === response[0] ) {

						addFieldSuccess1 = '<p class="wpbooklist-tab-intro-para"><img id="wpbooklist-smile-icon-1" src="' + wpbooklistCustomFieldsPhpVariables.ROOT_IMG_ICONS_URL + 'shocked.svg">' + wpbooklistCustomFieldsPhpVariables.trans26 + '</p>';
						
					} else {

						addFieldSuccess1 = '<p class="wpbooklist-tab-intro-para"><span id="wpbooklist-success-span">' + wpbooklistCustomFieldsPhpVariables.trans17 + '</span><br/> ' + wpbooklistCustomFieldsPhpVariables.trans18 + ' <span class="wpbooklist-bold-shortcode">';

						// Add response message to DOM
						endMessage = '<div id="wpbooklist-addbook-success-thanks"><p class="wpbooklist-tab-intro-para">' + wpbooklistCustomFieldsPhpVariables.trans19 + ' <a href="http://wpbooklist.com/index.php/extensions/">' + wpbooklistCustomFieldsPhpVariables.trans20 + '</a></p><p class="wpbooklist-tab-intro-para">' + wpbooklistCustomFieldsPhpVariables.trans21 + ' <a id="wpbooklist-addbook-success-review-link" href="https://wordpress.org/support/plugin/wpbooklist/reviews/?filter=5" >' + wpbooklistCustomFieldsPhpVariables.trans22 + '</a></p><img id="wpbooklist-smile-icon-1" src="' + wpbooklistCustomFieldsPhpVariables.ROOT_IMG_ICONS_URL + 'happy.svg"></div>';

					}


					successDiv.html( addFieldSuccess1 + endMessage );

					console.log(response);
				}
			});



		});
	}

	// Function that deletes an entire Custom Field Entry.
	function wpbooklistCustomFieldsDeleteEntry() {
		$( document ).on( 'click', '.wpbooklist-addition-div-customfields-delete', function( event ) {
			
			var key = $( this ).attr( 'data-key' );
			var type = $( this ).attr( 'data-type' );
			var name = $( this ).attr( 'data-name' );
			var book = $( this ).attr( 'data-book' );
			var lib = $( this ).attr( 'data-lib' );
			var options = $ ( this ).attr( 'data-options' );
			var data = [];
			var request = '';

			// Replace any spaces in name with underscores
			name = name.replace( / /g, '_' );

			var dbstring = '--' + name + ';' + type + ';' + book + ';' + lib + ';' + options;

			console.log(dbstring);

			$( '#wpbooklist-spinner-' + key ).animate({'opacity':1});

			data = {
				'action': 'wpbooklist_custom_fields_delete_entry_action',
				'security': wpbooklistCustomFieldsPhpVariables.adminnonce2,
				'name': name,
				'dbstring': dbstring,
			};

			console.log(data);

			request = $.ajax({
				url: ajaxurl,
				type: 'POST',
				data: data,
				timeout: 0,
				success: function( response ) {

					console.log(response);
					document.location.reload( true );
				}

			});
		});
	}

	// Function that edits the Custom Field Entries.
	function wpbooklistCustomFieldsEditEntries() {
		$( document ).on( 'click', '#wpbooklist-admin-customfields-edit-button', function( event ) {
			
			var dbstring = '';
			var data = [];
			var request = '';
			var name = '';
			var type = '';
			var libview = ''
			var bookview = '';
			var options = '';
			var dbstring = '';



			$( '.wpbooklist-customfields-edit-indiv-container-div' ).each( function(){

				name = $( this ).find( 'input[type="text"]' ).val();
				type = $( this ).find( 'input[type="hidden"]' ).val();
				bookview = $( this ).find( '.wpbooklist-customfield-select-book-view' ).val();
				libview = $( this ).find( '.wpbooklist-customfield-select-lib-view' ).val();

				if ( 'Drop-Down' === type ) {
					options = '';
					$( this ).find( '.wpbooklist-customfield-dropdown-input' ).each(function(){
						options = options + $( this ).val() + '/';
					});

					// Remove last /
					options = options.substring(0, options.length - 1);

				} else {
					options = $( this ).find( '.wpbooklist-addition-div-customfields-delete' ).attr('data-options');
				}

				dbstring = dbstring + '--' + name + ';' + type + ';' + bookview + ';' + libview + ';' + options;

			});

			$( '#wpbooklist-spinner-edit' ).animate({'opacity':1});

			data = {
				'action': 'wpbooklist_custom_fields_edit_entry_action',
				'security': wpbooklistCustomFieldsPhpVariables.adminnonce3,
				'dbstring': dbstring,
			};

			console.log(data);

			request = $.ajax({
				url: ajaxurl,
				type: 'POST',
				data: data,
				timeout: 0,
				success: function( response ) {

					console.log(response);
					
				}

			});
		});
	}
});
